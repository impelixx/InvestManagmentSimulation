version: '3.8'  # Specify the version of Docker Compose

services:
  Adminfront:
    image: adminfront
    build:
      context: ./Adminfront
      dockerfile: Dockerfile
    ports:
      - "1488:1488"
  
  Frontendserver:
    depends_on:
      mongodb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    image: frontendserver
    build: 
      context: ./python
      dockerfile: Dockerfile
    ports:
      - "5252:5252"

  Backend:
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  Frontend:
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
  
  mongodb:
    image: mongo
    ports:
      - "6969:27017"
    environment:
      MONGODB_HOSTNAME: mongodb
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      ADMIN_DATABASE: admin
      COMMON_DATABASE: commonDB
      COMMON_USERNAME: common
      COMMON_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ ping: 1 })' --username $COMMON_USERNAME --password $COMMON_PASSWORD --host $MONGODB_HOSTNAME || exit 1"]
      interval: 20s
      timeout: 2s
      retries: 3

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: impelix
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U impelix -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5